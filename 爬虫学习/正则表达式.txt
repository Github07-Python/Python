正则表达式

2021年1月15日
20:29

       正则表达式是一种用来匹配字符串的强有力的武器。它的设计思想是用一种描述性的语言来给字符串定义一个规则，凡是符合规则的字符串，我们就认为它“匹配”了，否则，该字符串就是不合法的。

\d	匹配1个数字
\w	1个字母或数字
.	匹配任意字符
\s	匹配空格

	*	表示任意个字符
	+	至少一个字符
	？	表示0个或1个字符
	{n}	表示n个字符
	{n,m}	表示n到m个字符

Example:
	\d{5}  表示匹配5个数字
	\d+           表示匹配至少一个数字
	\d*           表示匹配任意个数字（包括0）
010-12345 正则表达式： \d{3}\-\d{3,5}   
								说明：'-'要转义为‘\-'

进阶

	[0-9a-zA-Z\_]	匹配1个数字，字母或下划线
	[0-9a-zA-Z\_]+	匹配至少1个数字，字母或下划线
	[a-zA-Z\_][0-9a-zA-Z\_]*	匹配由字母或下划线开头，后接任意个由一个数字、字母或者下划线组成的字符串，也就是Python合法的变量
	[a-zA-Z\_][0-9a-zA-Z\_]{0, 19}	更精确地限制了变量的长度是1-20个字符（前面1个字符+后面最多19个字符）。

例如

A|B	匹配A或B		'(P|p)thon'   匹配'Python'，'python'
^	表示行的开头		^\d  表示必须以数字开头
$	表示行的结束		\d$  表示必须以数字结束

Python提供re模块，包含所有正则表达式的功能！
